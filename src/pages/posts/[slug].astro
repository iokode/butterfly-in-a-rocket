---
import {getCollection, getEntry} from "astro:content";
import {Markdown} from 'astro-remote';
import PostLayout from "../../layouts/PostLayout.astro";
import Comments from "../../components/Comments.svelte";
import Alert from "../../components/Entry/Alert.astro";
import Message from "../../components/Entry/Message.astro";

const allowedComponents = {Alert, Message};

export const getStaticPaths = async function () {
    const posts = await getCollection('posts');

    const mappedPosts = posts.map(async post => {
        const license = (await getEntry('licenses', post.data.license))!;

        return {
            params: {slug: post.data.slug},
            props: {
                body: post.body,
                post: post.data as {
                    author: string,
                    title: string,
                    publishDate: Date,
                    slug: string,
                    discussionId: number,
                    tags: string[],
                },
                license: license.data,
            }
        }
    })

    return Promise.all(mappedPosts);
};
---

<PostLayout {...Astro.props.post} license={Astro.props.license}>
    <Markdown content={Astro.props.body} sanitize={{allowComponents: true}} components={allowedComponents}/>

    <Comments client:visible discussionId={Astro.props.post.discussionId} author={Astro.props.post.author}/>
</PostLayout>