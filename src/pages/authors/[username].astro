---
import {type CollectionEntry, getCollection, getEntry} from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Markdown } from "astro-remote";

type PostsByYear = {
    [year: string]: CollectionEntry<'posts'> [];
};

export const getStaticPaths = async () => {
    const posts = await getCollection('posts');
    const authors = [...new Set(posts.map(post => post.data.author))];

    return authors.map(author => ({
        params: {username: author},
        props: {username: author}
    }));
};

const {username} = Astro.props;

let posts = (await getCollection('posts')).sort(
    (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
);

posts = posts.filter(post => post.data.author === username);

const postsByYear = posts.reduce<PostsByYear>((accumulator, post) => {
    const year = new Date(post.data.publishDate).getFullYear();
    if (!accumulator[year]) {
        accumulator[year] = [];
    }
    accumulator[year].push(post);
    return accumulator;
}, {});

const name = posts[0].data.authorName || username;
const entry = await getEntry('authors', username)!;

---

<Layout title={`Posts by ${name}`}
        description={`Archive of all blog posts written by ${name}`}>
    <h1>Archive of posts by {name}</h1>
    <div class="author-card">
        <div class="avatar">
            <img src={`https://github.com/${username}.png`} alt={`${username}'s avatar`}/>
        </div>
        <div class="stats">
            <div>Wrote {posts.length} post{posts.length > 1 ? 's' : ''}</div>
        </div>
        <div class="github">
            <a href={`https://github.com/${username}`} target="_blank">Visit GitHub profile</a>
        </div>
        <div class="entry">
            <Markdown content={entry.body} />
        </div>
    </div>

    {Object.entries(postsByYear).reverse().map(([year, yearPosts]) => (
            <section>
                <h2>{year}</h2>
                <ul>
                    {yearPosts.map(post => (
                            <li>
                                <a href={`/posts/${post.data.slug}`}>{post.data.title}</a>
                            </li>
                    ))}
                </ul>
            </section>
    ))}
</Layout>

<style lang="scss">
    @use '../../styles/variables/borders';

    .author-card {
        // Boxing
        display: grid;
        padding: .5em;

        // Grid
        column-gap: .5em;
        grid-template-rows: 1.5em 3em auto;
        grid-template-columns: auto 1fr;
        grid-template-areas:
                "avatar stats"
                "avatar github"
                "entry entry";

        // Style
        border: borders.$default;

        .avatar {
            // Grid
            grid-area: avatar;

            img {
                // Boxing
                width: 4.5em;
            }
        }

        .stats {
            // Grid
            grid-area: stats;
        }

        .github {
            // Grid
            grid-area: github;
        }

        .entry {
            grid-area: entry;
        }
    }
</style>