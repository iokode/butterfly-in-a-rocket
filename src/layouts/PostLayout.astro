---
import Layout from "./Layout.astro";
import {getGithubAvatar, getGithubRealnameFromUserName} from "../helpers/github";
import {getSeriesPost, type SeriesIndex} from "../helpers/posts";
import {generateOGImage} from "../helpers/og-generator";
import {getCollection} from "astro:content";

interface Props {
    title: string
    author: string
    publishDate: Date
    series?: string
    slug: string
    license: { code: string, url: string }
    tags: string[]
}

const tags = await getCollection('tags');
function getTagName(tagId: string) {
    const tag = tags.find(t => t.id === tagId)!;
    return tag.data.name;
}

function formatDate() {
    return Astro.props.publishDate.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
    });
}

const tagsWithName = Astro.props.tags.map(tag => ({id: tag, name: getTagName(tag)}));

const authorRealName = await getGithubRealnameFromUserName(Astro.props.author);
const avatar = await getGithubAvatar(Astro.props.author);

let seriesPosts: SeriesIndex[] | undefined = undefined;

if (Astro.props.series !== undefined) {
    seriesPosts = await getSeriesPost(Astro.props.author, Astro.props.series, Astro.props.slug);
}

const description = `Post written by ${authorRealName} on ${Astro.props.publishDate.toDateString()}. Licensed under ${Astro.props.license.code}.`;
const ogImagePath = '/posts/og-images/' + Astro.props.slug + '.png';
---

<Layout title={Astro.props.title} description={description}>
    <Fragment slot="head" set:html={`
        <link rel="stylesheet" href="/hljs/styles/github.min.css"/>
        <link rel="stylesheet" href="/hljs/styles/github-dark.min.css" media="(prefers-color-scheme: dark)"/>
        <script src="/hljs/highlight.min.js"></script>
        <script>hljs.highlightAll({cssSelector: 'pre code[class|="language"]'});</script>
        
        <!-- Open Graph meta tags -->
        <meta property="og:title" content="${Astro.props.title}"/>
        <meta property="og:description" content="${description}"/>
        <meta property="og:image" content="https://iokode.blog${ogImagePath}"/>
        <meta property="og:image:width" content="1200"/>
        <meta property="og:image:height" content="630"/>
        <meta property="og:type" content="article"/>
        <meta property="og:url" content="https://iokode.blog/posts/${Astro.props.slug}"/>
        
        <!-- Twitter Card meta tags -->
        <meta name="twitter:card" content="summary_large_image"/>
        <meta name="twitter:title" content="${Astro.props.title}"/>
        <meta name="twitter:description" content="${description}"/>
        <meta name="twitter:image" content="https://iokode.blog${ogImagePath}"/>
    `}/>
    {Astro.props.tags.includes('spanish-legacy-post')
        ?
            <h1 lang="es">{Astro.props.title}</h1>
        :
            <h1>{Astro.props.title}</h1>
    }
    <div class="metadata">
        <div class="author-avatar">
            <img src={avatar.src} alt={`GitHub avatar of ${authorRealName}`}/>
        </div>
        <div class="author-name">
            <a href=`/authors/${Astro.props.author}`>{authorRealName}</a>
        </div>
        <div class="date">
            <span>{formatDate()}</span>
        </div>
        <div class="license">
            <span>Post licensed under</span> <a target="_blank" href={Astro.props.license.url}>{Astro.props.license.code}</a>
        </div>
        <div class="tags">
            <span>Tags:</span>
            <ul>
                {tagsWithName.map(tag => <li><a href={`/archive/${tag.id}`}>{tag.name}</a></li>)}
            </ul>
        </div>
    </div>

    {seriesPosts &&
            <div class="series">
                <p>This post belongs of the <strong>{Astro.props.series}</strong> series.</p>
                <ol class="posts">
                    {seriesPosts.map(post =>
                        post.current ?
                                <li class="current"><strong>{post.title}</strong></li> :
                                <li><a href={`/posts/${post.slug}`}>{post.title}</a></li>)}
                </ol>
            </div>
    }

    {Astro.props.tags.includes('spanish-legacy-post') ? <div lang="es"><slot/></div> : <slot/>}
</Layout>

<style lang="scss">
    @use "../styles/variables/borders";
    @use "../styles/variables/devices";
    @use "../styles/variables/fonts";

    .metadata {
        // Boxing
        display: grid;
        margin-bottom: 1em;
        padding: .5em;

        // Grid
        column-gap: .5em;
        grid-template-columns: 4.5em auto;
        grid-template-rows: 1.5em 1.5em 1.5em fit-content(100%);
        grid-template-areas:
            "avatar name"
            "avatar date"
            "avatar license"
            "tags tags";

        // Style
        border: borders.$default;

        @media (min-width: devices.$tablet), print {
            // Grid
            grid-template-columns: 4.5em auto fit-content(100%);
            grid-template-rows: 1.5em 1.5em 1.5em;
            grid-template-areas:
                "avatar name tags"
                "avatar date none"
                "avatar license none";
        }

        .author-avatar {
            // Grid
            grid-area: avatar;

            img {
                // Boxing
                width: 4.5em;
            }
        }

        .author-name {
            // Grid
            grid-area: name;
        }

        .date {
            // Grid
            grid-area: date;
        }

        .license {
            // Grid
            grid-area: license;

            > span {
                // Boxing
                display: none;

                @media (min-width: devices.$tablet), print {
                    // Boxing
                    display: inline;
                }
            }
        }

        .tags {
            // Grid
            grid-area: tags;

            @media (min-width: devices.$tablet) {
                // Boxing
                margin-left: auto;
            }

            @media print {
                // Boxing
                display: none;
            }

            ul {
                // Boxing
                display: inline-flex;
                margin: 0;
                padding: 0;

                // Flex
                flex-wrap: wrap;
                gap: .33em;

                li {
                    // Style
                    list-style-type: none;
                }
            }
        }
    }

    .series {
        // Boxing
        margin: .5em 0;
        padding: 0 1em;

        // Style
        border: borders.$default;

        > p {
            // Typography
            font-size: 1.2em;
            font-family: fonts.$titles;
        }
    }
</style>